---
// Project Gallery Component for Interior Design
import { getCollection } from 'astro:content';

// Obtener todos los proyectos desde content collections con validación Zod
const allProjects = await getCollection('projects');

// Filtrar solo proyectos publicados
const publishedProjects = allProjects.filter((project: any) => 
  project.data.published !== false // Por defecto true si no está definido
);

// Ordenar proyectos: destacados primero, luego por fecha de publicación
const featuredProjects = publishedProjects.filter((project: any) => project.data.featured);
const regularProjects = publishedProjects.filter((project: any) => !project.data.featured);

// Ordenar por fecha (más recientes primero)
const sortedFeatured = featuredProjects.sort((a: any, b: any) =>
  new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime()
);
const sortedRegular = regularProjects.sort((a: any, b: any) =>
  new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime()
);

// Combinar: destacados primero, luego regulares
const projects = [...sortedFeatured, ...sortedRegular];

// Debug: verificar que tenemos proyectos
console.log(`Total proyectos encontrados: ${allProjects.length}`);
console.log(`Proyectos publicados: ${publishedProjects.length}`);
console.log(`Proyectos destacados: ${featuredProjects.length}`);
console.log(`Proyectos regulares: ${regularProjects.length}`);
---

<section class="gallery-section">
  <div class="gallery-container">
    <!-- Section Header -->
    <div class="gallery-header">
      <span class="section-tag">Nuestros Proyectos</span>
      <h2 class="gallery-title">Galería de Espacios Transformados</h2>
      <p class="gallery-description">
        Descubre algunos de nuestros proyectos más destacados donde hemos transformado espacios 
        comunes en ambientes extraordinarios llenos de personalidad y funcionalidad.
      </p>
    </div>

    <!-- Filter Buttons -->
    <div class="filter-container">
      <button class="filter-btn active" data-filter="all">Todos</button>
      <button class="filter-btn" data-filter="living">Salas</button>
      <button class="filter-btn" data-filter="bedroom">Dormitorios</button>
      <button class="filter-btn" data-filter="kitchen">Cocinas</button>
      <button class="filter-btn" data-filter="office">Oficinas</button>
    </div>

    <!-- Gallery Grid -->
    <div class="gallery-grid" id="gallery-grid">
      {projects.length > 0 ? (
        projects.map((project) => (
          <div class="gallery-item" data-category={project.data.category}>
            <a href={`/proyecto/${project.id}`} class="project-link">
              <div class="gallery-image">
                <img  
                  src={project.data.img || project.data.images?.[0] || 'https://images.unsplash.com/photo-1586023492125-27b2c045efd7?q=80&w=800&auto=format&fit=crop'} 
                  alt={project.data.title} 
                  loading="lazy"
                  onerror="this.src='https://images.unsplash.com/photo-1586023492125-27b2c045efd7?q=80&w=800&auto=format&fit=crop'"
                >
                <div class="gallery-overlay">
                  <div class="gallery-content">
                    {project.data.featured && <span class="featured-badge">Destacado</span>}
                    <h3>{project.data.title}</h3>
                    <p>{project.data.description ? project.data.description.substring(0, 100) + '...' : 'Descripción no disponible'}</p>
                    <div class="gallery-tags">
                      {project.data.tags && project.data.tags.map((tag:any) => (
                        <span class="tag">{tag}</span>
                      ))}
                    </div>
                    <div class="project-meta">
                      <span class="meta-item">📍 {project.data.location || 'Ubicación no especificada'}</span>
                      <span class="meta-item">📐 {project.data.area || 'Área no especificada'}</span>
                      <span class="meta-item">📅 {project.data.year || 'Año no especificado'}</span>
                    </div>
                    <button class="view-project-btn">Ver Proyecto Completo</button>
                  </div>
                </div>
              </div>
            </a>
          </div>
        ))
      ) : (
        <div class="no-projects">
          <p>No se encontraron proyectos para mostrar.</p>
          <p>Verifica que los archivos markdown estén en la carpeta correcta y tengan el formato adecuado.</p>
        </div>
      )}
    </div>

    <!-- Load More Button -->
    <div class="load-more-container">
      <button class="load-more-btn" id="load-more-btn">
        <span>Ver Más Proyectos</span>
        <svg class="load-more-icon" viewBox="0 0 24 24" fill="none">
          <path d="M12 5v14m-7-7h14" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div>
  </div>

  <!-- Project Modal -->
  <div id="project-modal" class="project-modal">
    <div class="modal-overlay" onclick="closeProjectModal()"></div>
    <div class="modal-content">
      <button class="modal-close" onclick="closeProjectModal()">
        <svg viewBox="0 0 24 24" fill="none">
          <path d="M18 6L6 18M6 6l12 12" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
        </svg>
      </button>
      
      <div class="modal-body" id="modal-body">
        <!-- Content will be dynamically loaded here -->
      </div>
    </div>
  </div>
</section>

<style>
.gallery-section {
  padding: 120px 0;
  background: linear-gradient(
    135deg,
    #FAF9F6 0%,
    #F8F8F8 50%,
    #F5F1EB 100%
  );
  position: relative;
  overflow: hidden;
}

.gallery-section::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(
    circle at 30% 70%, 
    rgba(156, 175, 136, 0.05) 0%, 
    transparent 50%
  );
  animation: float 20s ease-in-out infinite;
}

.gallery-container {
  max-width: 1400px;
  margin: 0 auto;
  padding: 0 20px;
  position: relative;
  z-index: 2;
}

.gallery-header {
  text-align: center;
  margin-bottom: 80px;
}

.section-tag {
  display: inline-block;
  background: linear-gradient(135deg, #9CAF88, #D4A574);
  color: white;
  padding: 8px 20px;
  border-radius: 25px;
  font-size: 14px;
  font-weight: 600;
  letter-spacing: 0.5px;
  margin-bottom: 20px;
  text-transform: uppercase;
}

.gallery-title {
  font-size: clamp(2.5rem, 5vw, 4rem);
  font-weight: 700;
  color: #2F2F2F;
  margin-bottom: 24px;
  line-height: 1.2;
  background: linear-gradient(135deg, #2F2F2F 0%, #9CAF88 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.gallery-description {
  font-size: 18px;
  color: #666;
  max-width: 600px;
  margin: 0 auto;
  line-height: 1.6;
}

.filter-container {
  display: flex;
  justify-content: center;
  gap: 15px;
  margin-bottom: 60px;
  flex-wrap: wrap;
}

.filter-btn {
  padding: 12px 30px;
  border: 2px solid #9CAF88;
  background: transparent;
  color: #9CAF88;
  border-radius: 50px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  font-size: 16px;
}

.filter-btn:hover,
.filter-btn.active {
  background: #9CAF88;
  color: white;
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(156, 175, 136, 0.3);
}

.gallery-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  gap: 30px;
  margin-bottom: 80px;
}

.gallery-item {
  position: relative;
  border-radius: 20px;
  overflow: hidden;
  background: white;
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
  transition: all 0.4s ease;
  opacity: 1;
  transform: translateY(0);
}

.gallery-item.hidden {
  opacity: 0;
  transform: translateY(20px);
  pointer-events: none;
}

.gallery-item:hover {
  transform: translateY(-10px);
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
}

.gallery-image {
  position: relative;
  height: 300px;
  overflow: hidden;
}

.gallery-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.6s ease;
}

.gallery-item:hover .gallery-image img {
  transform: scale(1.05);
}

.gallery-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    to bottom,
    transparent 0%,
    rgba(47, 47, 47, 0.8) 100%
  );
  opacity: 0;
  transition: all 0.4s ease;
  display: flex;
  align-items: flex-end;
  padding: 30px;
}

.gallery-item:hover .gallery-overlay {
  opacity: 1;
}

.gallery-content h3 {
  color: white;
  font-size: 22px;
  font-weight: 700;
  margin: 0 0 8px 0;
  transform: translateY(20px);
  transition: transform 0.4s ease 0.1s;
}

.gallery-content p {
  color: rgba(255, 255, 255, 0.9);
  font-size: 14px;
  margin: 0 0 15px 0;
  line-height: 1.5;
  transform: translateY(20px);
  transition: transform 0.4s ease 0.2s;
}

.gallery-item:hover .gallery-content h3,
.gallery-item:hover .gallery-content p {
  transform: translateY(0);
}

.gallery-tags {
  display: flex;
  gap: 8px;
  transform: translateY(20px);
  transition: transform 0.4s ease 0.3s;
}

.gallery-item:hover .gallery-tags {
  transform: translateY(0);
}

.tag {
  background: rgba(156, 175, 136, 0.9);
  color: white;
  padding: 4px 12px;
  border-radius: 15px;
  font-size: 12px;
  font-weight: 600;
}

.view-project-btn {
  background: linear-gradient(135deg, #9CAF88 0%, #D4A574 100%);
  color: white;
  border: none;
  padding: 8px 16px;
  border-radius: 20px;
  font-size: 12px;
  font-weight: 600;
  cursor: pointer;
  margin-top: 10px;
  transition: all 0.3s ease;
  transform: translateY(20px);
  opacity: 0;
}

.gallery-item:hover .view-project-btn {
  transform: translateY(0);
  opacity: 1;
  transition-delay: 0.4s;
}

.view-project-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 15px rgba(156, 175, 136, 0.4);
}

/* Project Modal Styles */
.project-modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
  display: none;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.project-modal.active {
  display: flex;
  opacity: 1;
}

.modal-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.9);
  cursor: pointer;
}

.modal-content {
  position: relative;
  width: 95%;
  height: 95%;
  max-width: 1400px;
  margin: auto;
  background: #FAF9F6;
  border-radius: 20px;
  overflow: hidden;
  box-shadow: 0 25px 60px rgba(0, 0, 0, 0.3);
  transform: scale(0.9);
  transition: transform 0.3s ease;
}

.project-modal.active .modal-content {
  transform: scale(1);
}

.modal-close {
  position: absolute;
  top: 20px;
  right: 20px;
  width: 50px;
  height: 50px;
  background: rgba(47, 47, 47, 0.9);
  border: none;
  border-radius: 50%;
  color: white;
  cursor: pointer;
  z-index: 10001;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.modal-close:hover {
  background: #9CAF88;
  transform: rotate(90deg);
}

/* Estilos para elementos nuevos de content collections */
.featured-badge {
  position: absolute;
  top: 10px;
  right: 10px;
  background: linear-gradient(135deg, #D4A574 0%, #E8B4A0 100%);
  color: white;
  padding: 4px 8px;
  border-radius: 12px;
  font-size: 10px;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  box-shadow: 0 2px 8px rgba(212, 165, 116, 0.3);
  z-index: 2;
}

.project-meta {
  display: flex;
  flex-direction: column;
  gap: 4px;
  margin: 10px 0;
  transform: translateY(20px);
  transition: transform 0.4s ease 0.4s;
}

.meta-item {
  font-size: 10px;
  color: rgba(255, 255, 255, 0.8);
  display: flex;
  align-items: center;
  gap: 4px;
}

.gallery-item:hover .project-meta {
  transform: translateY(0);
}

.no-projects {
  grid-column: 1 / -1;
  text-align: center;
  padding: 60px 20px;
  background: white;
  border-radius: 15px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
}

.no-projects p {
  color: #666;
  font-size: 16px;
  margin: 10px 0;
}

.no-projects p:first-child {
  font-size: 18px;
  font-weight: 600;
  color: #2F2F2F;
}

.modal-close svg {
  width: 24px;
  height: 24px;
}

.modal-body {
  width: 100%;
  height: 100%;
  overflow-y: auto;
  padding: 0;
}

/* Modal Content Styles */
.modal-project-content {
  background: #FAF9F6;
}

.modal-hero {
  position: relative;
  height: 70vh;
  min-height: 500px;
  overflow: hidden;
}

.modal-hero-image {
  position: relative;
  width: 100%;
  height: 100%;
}

.modal-main-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.modal-hero-overlay {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background: linear-gradient(transparent, rgba(0,0,0,0.8));
  padding: 60px 40px 40px;
}

.modal-hero-content {
  max-width: 1400px;
  margin: 0 auto;
}

.modal-title {
  font-size: 3.5rem;
  font-weight: 700;
  color: white;
  margin: 0 0 10px 0;
  text-shadow: 0 2px 10px rgba(0,0,0,0.5);
}

.modal-category {
  font-size: 1.2rem;
  color: #9CAF88;
  margin: 0;
  font-weight: 600;
}

.modal-container {
  max-width: 1400px;
  margin: 0 auto;
  padding: 0 40px;
}

.modal-info-section {
  padding: 80px 0;
  background: #FAF9F6;
}

.modal-info-grid {
  display: grid;
  grid-template-columns: 2fr 1fr;
  gap: 60px;
  align-items: start;
}

.modal-info-main h2 {
  font-size: 2.5rem;
  color: #2F2F2F;
  margin-bottom: 30px;
  font-weight: 700;
}

.modal-description {
  font-size: 1.2rem;
  line-height: 1.8;
  color: #666;
  margin-bottom: 40px;
}

.modal-challenge,
.modal-solution {
  margin-bottom: 40px;
}

.modal-challenge h3,
.modal-solution h3 {
  font-size: 1.5rem;
  color: #9CAF88;
  margin-bottom: 15px;
  font-weight: 600;
}

.modal-challenge p,
.modal-solution p {
  font-size: 1.1rem;
  line-height: 1.7;
  color: #555;
}

.modal-info-card {
  background: white;
  padding: 40px;
  border-radius: 20px;
  box-shadow: 0 10px 40px rgba(0,0,0,0.1);
  position: sticky;
  top: 40px;
}

.modal-info-card h3 {
  font-size: 1.3rem;
  color: #2F2F2F;
  margin-bottom: 30px;
  font-weight: 600;
}

.modal-detail {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 12px 0;
  border-bottom: 1px solid #eee;
}

.modal-detail:last-child {
  border-bottom: none;
}

.detail-label {
  font-weight: 600;
  color: #666;
}

.detail-value {
  color: #2F2F2F;
  font-weight: 500;
}

.modal-gallery-section {
  padding: 80px 0;
  background: #F8F8F8;
}

.modal-gallery-section h2 {
  font-size: 2.5rem;
  color: #2F2F2F;
  margin-bottom: 50px;
  text-align: center;
}

.modal-image-gallery {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 30px;
}

.modal-gallery-item {
  border-radius: 15px;
  overflow: hidden;
  cursor: pointer;
  transition: transform 0.3s ease;
  background: white;
  box-shadow: 0 10px 30px rgba(0,0,0,0.1);
}

.modal-gallery-item:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 40px rgba(0,0,0,0.15);
}

.modal-gallery-item img {
  width: 100%;
  height: 250px;
  object-fit: cover;
}

.modal-features-section {
  padding: 80px 0;
  background: #FAF9F6;
}

.modal-features-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 80px;
}

.modal-features-main h2,
.modal-materials h2 {
  font-size: 2rem;
  color: #2F2F2F;
  margin-bottom: 30px;
  font-weight: 600;
}

.modal-features-list,
.modal-materials-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

.modal-features-list li,
.modal-materials-list li {
  padding: 15px 0;
  border-bottom: 1px solid #eee;
  color: #555;
  font-size: 1.1rem;
  line-height: 1.6;
  position: relative;
  padding-left: 30px;
}

.modal-features-list li:before {
  content: '✦';
  position: absolute;
  left: 0;
  color: #9CAF88;
  font-weight: bold;
}

.modal-materials-list li:before {
  content: '◆';
  position: absolute;
  left: 0;
  color: #D4A574;
  font-weight: bold;
}

.modal-testimonial-section {
  padding: 80px 0;
  background: linear-gradient(135deg, #9CAF88 0%, #D4A574 100%);
}

.modal-testimonial {
  text-align: center;
  max-width: 800px;
  margin: 0 auto;
}

.modal-testimonial blockquote {
  font-size: 1.5rem;
  color: white;
  font-style: italic;
  margin: 0 0 30px 0;
  line-height: 1.6;
  quotes: """ """ "'" "'";
}

.modal-testimonial blockquote:before {
  content: open-quote;
  font-size: 3rem;
  line-height: 0.1em;
  margin-right: 0.25em;
  vertical-align: -0.4em;
}

.modal-testimonial blockquote:after {
  content: close-quote;
  font-size: 3rem;
  line-height: 0.1em;
  margin-left: 0.25em;
  vertical-align: -0.4em;
}

.modal-testimonial cite {
  display: block;
  color: rgba(255,255,255,0.9);
  font-style: normal;
}

.modal-testimonial cite strong {
  display: block;
  font-size: 1.2rem;
  margin-bottom: 5px;
}

@media (max-width: 1024px) {
  .modal-content {
    width: 98%;
    height: 98%;
  }
  
  .modal-container {
    padding: 0 20px;
  }
  
  .modal-info-grid,
  .modal-features-grid {
    grid-template-columns: 1fr;
    gap: 40px;
  }
  
  .modal-hero-overlay {
    padding: 40px 20px 20px;
  }
  
  .modal-title {
    font-size: 2.5rem;
  }
  
  .modal-image-gallery {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 768px) {
  .modal-info-section,
  .modal-gallery-section,
  .modal-features-section,
  .modal-testimonial-section {
    padding: 40px 0;
  }
  
  .modal-hero {
    height: 50vh;
    min-height: 300px;
  }
  
  .modal-title {
    font-size: 2rem;
  }
  
  .modal-info-main h2,
  .modal-gallery-section h2 {
    font-size: 1.8rem;
  }
}

.load-more-container {
  text-align: center;
}

.load-more-btn {
  display: inline-flex;
  align-items: center;
  gap: 10px;
  padding: 18px 40px;
  background: linear-gradient(135deg, #9CAF88 0%, #D4A574 100%);
  color: white;
  border: none;
  border-radius: 50px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 8px 30px rgba(156, 175, 136, 0.3);
}

.load-more-btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 12px 40px rgba(156, 175, 136, 0.4);
}

.load-more-icon {
  width: 20px;
  height: 20px;
  transition: transform 0.3s ease;
}

.load-more-btn:hover .load-more-icon {
  transform: rotate(90deg);
}

@keyframes float {
  0%, 100% { transform: translateY(0) rotate(0deg); }
  50% { transform: translateY(-20px) rotate(180deg); }
}

@media (max-width: 768px) {
  .gallery-section {
    padding: 80px 0;
  }
  
  .gallery-container {
    padding: 0 15px;
  }
  
  .gallery-header {
    margin-bottom: 50px;
  }
  
  .gallery-grid {
    grid-template-columns: 1fr;
    gap: 20px;
    margin-bottom: 50px;
  }
  
  .gallery-image {
    height: 250px;
  }
  
  .filter-container {
    gap: 10px;
    margin-bottom: 40px;
  }
  
  .filter-btn {
    padding: 10px 20px;
    font-size: 14px;
  }
  
  .gallery-overlay {
    padding: 20px;
  }
  
  .gallery-content h3 {
    font-size: 18px;
  }
  
  .gallery-content p {
    font-size: 13px;
  }
}

@media (max-width: 480px) {
  .gallery-grid {
    grid-template-columns: 1fr;
    gap: 15px;
  }
  
  .gallery-image {
    height: 200px;
  }
  
  .gallery-overlay {
    padding: 15px;
  }
}
</style>

<script is:inline>
// Gallery filtering functionality
document.addEventListener('DOMContentLoaded', function() {
  const filterButtons = document.querySelectorAll('.filter-btn');
  const galleryItems = document.querySelectorAll('.gallery-item');
  const loadMoreBtn = document.getElementById('load-more-btn');
  
  let visibleItems = 6; // Show first 6 items initially
  let currentFilter = 'all';
  
  // Initialize gallery
  function initializeGallery() {
    galleryItems.forEach((item, index) => {
      if (index >= visibleItems) {
        item.style.display = 'none';
      }
    });
  }
  
  // Filter functionality
  filterButtons.forEach(button => {
    button.addEventListener('click', function() {
      // Update active button
      filterButtons.forEach(btn => btn.classList.remove('active'));
      this.classList.add('active');
      
      const filter = this.getAttribute('data-filter');
      currentFilter = filter;
      visibleItems = 6; // Reset visible items
      
      filterItems(filter);
      updateLoadMoreButton();
    });
  });
  
  function filterItems(filter) {
    galleryItems.forEach((item, index) => {
      const category = item.getAttribute('data-category');
      
      if (filter === 'all' || category === filter) {
        item.classList.remove('hidden');
        item.style.display = index < visibleItems ? 'block' : 'none';
      } else {
        item.classList.add('hidden');
        setTimeout(() => {
          item.style.display = 'none';
        }, 300);
      }
    });
  }
  
  // Load more functionality
  if (loadMoreBtn) {
    loadMoreBtn.addEventListener('click', function() {
      const filteredItems = Array.from(galleryItems).filter(item => {
        const category = item.getAttribute('data-category');
        return currentFilter === 'all' || category === currentFilter;
      });
      
      // Show next batch of items
      for (let i = visibleItems; i < visibleItems + 3 && i < filteredItems.length; i++) {
        filteredItems[i].style.display = 'block';
        setTimeout(() => {
          filteredItems[i].classList.remove('hidden');
        }, i * 100);
      }
      
      visibleItems += 3;
      updateLoadMoreButton();
    });
  }
  
  function updateLoadMoreButton() {
    const filteredItems = Array.from(galleryItems).filter(item => {
      const category = item.getAttribute('data-category');
      return currentFilter === 'all' || category === currentFilter;
    });
    
    if (visibleItems >= filteredItems.length) {
      loadMoreBtn.style.display = 'none';
    } else {
      loadMoreBtn.style.display = 'inline-flex';
    }
  }
  
  // Intersection Observer for scroll animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };
  
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.style.opacity = '1';
        entry.target.style.transform = 'translateY(0)';
      }
    });
  }, observerOptions);
  
  // Observe gallery items
  galleryItems.forEach(item => {
    item.style.opacity = '0';
    item.style.transform = 'translateY(30px)';
    item.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
    observer.observe(item);
  });
  
  // Initialize
  initializeGallery();
  updateLoadMoreButton();
});
</script>