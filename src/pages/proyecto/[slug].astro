---
import Layout from '../../layouts/Layout.astro';
import { getCollection, type CollectionEntry, render } from 'astro:content';


export async function getStaticPaths() {
  const projects = await getCollection('projects');

  return projects.map((project: CollectionEntry<'projects'>) => ({
    params: { slug: project.id },
    props: { project },
  }));
}

interface Props {
  project: CollectionEntry<'projects'>;
}
const { project } = Astro.props as Props;
const { Content } = await render(project);

// Obtener proyectos relacionados (misma categor√≠a, excluyendo el actual)
const allProjects = await getCollection('projects');
const relatedProjects = allProjects
  .filter(p => p.data.category === project.data.category && p.id !== project.id)
  .slice(0, 6); // M√°ximo 6 proyectos relacionados

---
<Layout title={`${project.data.title} | Dise√±o Interior`}>
  <div class="project-detail">
    <!-- Hero Section -->
    <section class="project-hero">
      <div class="hero-image">
        <img src={project.data.img || project.data.images[0]} alt={project.data.title} class="hero-img" />
        <div class="hero-overlay">
          <div class="hero-content">
            <nav class="breadcrumb">
              <a href="/">Inicio</a>
              <span>/</span>
              <a href="/#proyectos">Proyectos</a>
              <span>/</span>
              <span>{project.data.title}</span>
            </nav>
            <h1 class="project-title">{project.data.title}</h1>
            <p class="project-category">{project.data.categoryName}</p>
            <div class="project-tags">
              {project.data.tags.map(tag => (
                <span class="tag">{tag}</span>
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Project Overview -->
    <section class="project-overview">
      <div class="container">
        <div class="overview-grid">
          <div class="overview-content">
            <h2>Descripci√≥n del Proyecto</h2>
            <p class="project-description">{project.data.description}</p>
          </div>
          
          <div class="overview-sidebar">
            <div class="project-info-card">
              <h3>Informaci√≥n del Proyecto</h3>
              <ul class="info-list">
                <li><strong>Categor√≠a:</strong> {project.data.categoryName}</li>
                <li><strong>Ubicaci√≥n:</strong> {project.data.location}</li>
                <li><strong>√Årea:</strong> {project.data.area}</li>
                <li><strong>A√±o:</strong> {project.data.year}</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Competitive Advantages -->
    <section class="competitive-advantages">
      <div class="container">
        <div class="section-header">
          <h2>¬øPor Qu√© Este Proyecto es √önico?</h2>
          <p class="section-subtitle">Ventajas competitivas que marcan la diferencia</p>
        </div>
        
        <div class="advantages-grid">
          <div class="advantage-card" data-advantage="innovation">
            <div class="advantage-icon">
              <svg viewBox="0 0 24 24" fill="none">
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </div>
            <h3>Dise√±o Innovador</h3>
            <p>Soluciones creativas que maximizan el potencial de cada espacio, combinando funcionalidad con est√©tica vanguardista.</p>
            <div class="advantage-highlight">
              <span class="highlight-badge">+300% Eficiencia Espacial</span>
            </div>
          </div>

          <div class="advantage-card" data-advantage="sustainability">
            <div class="advantage-icon">
              <svg viewBox="0 0 24 24" fill="none">
                <path d="M21 16V8a2 2 0 00-1-1.73l-7-4a2 2 0 00-2 0l-7 4A2 2 0 003 8v8a2 2 0 001 1.73l7 4a2 2 0 002 0l7-4A2 2 0 0021 16z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </div>
            <h3>Sostenibilidad</h3>
            <p>Compromiso con el medio ambiente usando materiales eco-friendly y t√©cnicas de construcci√≥n responsables.</p>
            <div class="advantage-highlight">
              <span class="highlight-badge">85% Materiales Reciclados</span>
            </div>
          </div>

          <div class="advantage-card" data-advantage="technology">
            <div class="advantage-icon">
              <svg viewBox="0 0 24 24" fill="none">
                <path d="M13 2L3 14h9l-1 8 10-12h-9l1-8z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </div>
            <h3>Tecnolog√≠a Integrada</h3>
            <p>Incorporaci√≥n de dom√≥tica y sistemas inteligentes para un hogar del futuro, hoy.</p>
            <div class="advantage-highlight">
              <span class="highlight-badge">Smart Home Ready</span>
            </div>
          </div>

          <div class="advantage-card" data-advantage="customization">
            <div class="advantage-icon">
              <svg viewBox="0 0 24 24" fill="none">
                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </div>
            <h3>Personalizaci√≥n Total</h3>
            <p>Cada elemento dise√±ado espec√≠ficamente para el estilo de vida y necesidades √∫nicas del cliente.</p>
            <div class="advantage-highlight">
              <span class="highlight-badge">100% Personalizado</span>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Project Statistics & Achievements -->
    <section class="project-stats">
      <div class="container">
        <div class="stats-header">
          <h2>Proyecto en N√∫meros</h2>
          <p>Resultados que hablan por s√≠ solos</p>
        </div>
        
        <div class="stats-grid">
          <div class="stat-card" data-stat="time">
            <div class="stat-icon">‚è±Ô∏è</div>
            <div class="stat-content">
              <div class="stat-number" data-target="45">0</div>
              <div class="stat-unit">d√≠as</div>
            </div>
            <div class="stat-label">Tiempo de Ejecuci√≥n</div>
            <div class="stat-description">Completado en tiempo r√©cord</div>
          </div>

          <div class="stat-card" data-stat="space">
            <div class="stat-icon">üìê</div>
            <div class="stat-content">
              <div class="stat-number" data-target="{project.data.area.replace(' m¬≤', '').replace('m¬≤', '')}">{project.data.area.replace(' m¬≤', '').replace('m¬≤', '')}</div>
              <div class="stat-unit">m¬≤</div>
            </div>
            <div class="stat-label">√Årea Transformada</div>
            <div class="stat-description">Cada metro optimizado</div>
          </div>

          <div class="stat-card" data-stat="sustainability">
            <div class="stat-icon">‚ôªÔ∏è</div>
            <div class="stat-content">
              <div class="stat-number" data-target="85">0</div>
              <div class="stat-unit">%</div>
            </div>
            <div class="stat-label">Materiales Sostenibles</div>
            <div class="stat-description">Compromiso ambiental</div>
          </div>

          <div class="stat-card" data-stat="satisfaction">
            <div class="stat-icon">‚≠ê</div>
            <div class="stat-content">
              <div class="stat-number" data-target="100">0</div>
              <div class="stat-unit">%</div>
            </div>
            <div class="stat-label">Satisfacci√≥n Cliente</div>
            <div class="stat-description">Expectativas superadas</div>
          </div>
        </div>

        <div class="achievements-section">
          <h3>Logros del Proyecto</h3>
          <div class="achievements-grid">
            <div class="achievement-item">
              <div class="achievement-icon">üèÜ</div>
              <div class="achievement-content">
                <h4>Premio al Dise√±o Innovador</h4>
                <p>Reconocimiento por soluciones creativas en espacios reducidos</p>
              </div>
            </div>

            <div class="achievement-item">
              <div class="achievement-icon">üå±</div>
              <div class="achievement-content">
                <h4>Certificaci√≥n Eco-Friendly</h4>
                <p>Proyecto certificado por uso responsable de recursos naturales</p>
              </div>
            </div>

            <div class="achievement-item">
              <div class="achievement-icon">üí°</div>
              <div class="achievement-content">
                <h4>Eficiencia Energ√©tica A+</h4>
                <p>Reducci√≥n del 40% en consumo energ√©tico vs. dise√±o anterior</p>
              </div>
            </div>

            <div class="achievement-item">
              <div class="achievement-icon">üë•</div>
              <div class="achievement-content">
                <h4>Cliente 100% Satisfecho</h4>
                <p>Testimonio destacado y recomendaci√≥n activa del proyecto</p>
              </div>
            </div>
          </div>
        </div>

        <div class="project-impact">
          <div class="impact-card">
            <h3>Impacto del Proyecto</h3>
            <div class="impact-metrics">
              <div class="metric">
                <span class="metric-value">+250%</span>
                <span class="metric-label">Incremento en funcionalidad</span>
              </div>
              <div class="metric">
                <span class="metric-value">-40%</span>
                <span class="metric-label">Reducci√≥n consumo energ√©tico</span>
              </div>
              <div class="metric">
                <span class="metric-value">15</span>
                <span class="metric-label">A√±os de vida √∫til garantizada</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Additional Project Details -->
    {(project.data.client || project.data.duration || project.data.budget) && (
      <section class="additional-details">
        <div class="container">
          <div class="details-card">
            <h3>Detalles Adicionales del Proyecto</h3>
            <div class="detail-grid">
              {project.data.client && (
                <div class="detail">
                  <span class="detail-label">üë• Cliente</span>
                  <span class="detail-value">{project.data.client}</span>
                </div>
              )}
              {project.data.duration && (
                <div class="detail">
                  <span class="detail-label">‚è±Ô∏è Duraci√≥n</span>
                  <span class="detail-value">{project.data.duration}</span>
                </div>
              )}
              {project.data.budget && (
                <div class="detail">
                  <span class="detail-label">üí∞ Presupuesto</span>
                  <span class="detail-value">{project.data.budget}</span>
                </div>
              )}
            </div>
          </div>
        </div>
      </section>
    )}

    <!-- Image Gallery -->
    <section class="project-gallery">
      <div class="container">
        <h2>Galer√≠a de Im√°genes</h2>
        <div class="gallery-grid">
          {project.data.images.map((image, index) => (
            <div class="gallery-item" onclick={`openImageViewer('${image}', ${index})`}>
              <img src={image} alt={`${project.data.title} - Imagen ${index + 1}`} loading="lazy" />
              <div class="gallery-overlay">
                <span class="view-icon">üîç</span>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Features & Materials -->
    <section class="features-materials">
      <div class="container">
        <div class="features-grid">
          <div class="features">
            <h2>Caracter√≠sticas Destacadas</h2>
            <ul class="features-list">
              {project.data.features.map((feature: string) => (
                <li>{feature}</li>
              ))}
            </ul>
          </div>
          
          <div class="materials">
            <h2>Materiales y Acabados</h2>
            <ul class="materials-list">
              {project.data.materials.map((material: string) => (
                <li>{material}</li>
              ))}
            </ul>
          </div>
        </div>
      </div>
    </section>

    <!-- Client Testimonial -->
    <section class="client-testimonial">
      <div class="container">
        <div class="testimonial-wrapper">
          <div class="testimonial-icon">
            <svg viewBox="0 0 24 24" fill="none">
              <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-9.983zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h4v10h-10z" fill="currentColor"/>
            </svg>
          </div>
          
          <div class="testimonial-card">
            <div class="testimonial-content">
              <p class="testimonial-text">"{project.data.testimonial.text}"</p>
            </div>
            
            <div class="client-info">
              <div class="client-avatar">
                <div class="avatar-circle">
                  <span>{project.data.testimonial.author.charAt(0)}</span>
                </div>
              </div>
              <div class="client-details">
                <h4 class="client-name">{project.data.testimonial.author}</h4>
                <p class="client-role">{project.data.testimonial.role}</p>
                <div class="rating">
                  <span class="star">‚òÖ</span>
                  <span class="star">‚òÖ</span>
                  <span class="star">‚òÖ</span>
                  <span class="star">‚òÖ</span>
                  <span class="star">‚òÖ</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Related Projects Slider -->
    <section class="related-projects">
      <div class="container">
        <div class="section-header">
          <h2>Proyectos Relacionados</h2>
          <p class="section-subtitle">Descubre m√°s proyectos de {project.data.categoryName}</p>
        </div>

        {relatedProjects.length > 0 ? (
          <div class="slider-container">
            <div class="slider-wrapper">
              <div class="projects-slider" id="relatedSlider">
                {relatedProjects.map((relatedProject, index) => (
                  <div class="slider-item">
                    <a href={`/proyecto/${relatedProject.id}`} class="project-card">
                      <div class="project-image">
                        <img 
                          src={relatedProject.data.img || relatedProject.data.images[0]} 
                          alt={relatedProject.data.title}
                          loading="lazy"
                        />
                        <div class="project-overlay">
                          <span class="view-project">Ver Proyecto</span>
                        </div>
                      </div>
                      <div class="project-info">
                        <h3 class="project-name">{relatedProject.data.title}</h3>
                        <p class="project-location">{relatedProject.data.location}</p>
                        <div class="project-meta">
                          <span class="project-area">{relatedProject.data.area}</span>
                          <span class="project-year">{relatedProject.data.year}</span>
                        </div>
                      </div>
                    </a>
                  </div>
                ))}
              </div>
            </div>

            <!-- Slider Controls -->
            <button class="slider-btn slider-prev" onclick="moveSlider('prev')" aria-label="Proyecto anterior">
              <svg viewBox="0 0 24 24" fill="none">
                <path d="M15 18l-6-6 6-6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </button>
            <button class="slider-btn slider-next" onclick="moveSlider('next')" aria-label="Siguiente proyecto">
              <svg viewBox="0 0 24 24" fill="none">
                <path d="M9 18l6-6-6-6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </button>

            <!-- Slider Indicators -->
            <div class="slider-indicators">
              {relatedProjects.map((_, index) => (
                <button 
                  class={`indicator ${index === 0 ? 'active' : ''}`}
                  onclick={`goToSlide(${index})`}
                  aria-label={`Ir al proyecto ${index + 1}`}
                ></button>
              ))}
            </div>
          </div>
        ) : (
          <div class="no-related">
            <div class="no-related-content">
              <svg viewBox="0 0 24 24" fill="none">
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              <h3>¬°Proyecto √∫nico!</h3>
              <p>Este es un proyecto especial en su categor√≠a</p>
              <a href="/#proyectos" class="view-all-btn">Ver Todos los Proyectos</a>
            </div>
          </div>
        )}
      </div>
    </section>

    <!-- Image Viewer Modal -->
    <div id="image-viewer" class="image-viewer">
      <div class="viewer-overlay" onclick="closeImageViewer()"></div>
      <div class="viewer-content">
        <button class="viewer-close" onclick="closeImageViewer()">
          <svg viewBox="0 0 24 24" fill="none">
            <path d="M18 6L6 18M6 6l12 12" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          </svg>
        </button>
        <img id="viewer-image" src="" alt="" />
        <div class="viewer-controls">
          <button class="viewer-prev" onclick="prevImage()">‚Äπ</button>
          <span class="viewer-counter"></span>
          <button class="viewer-next" onclick="nextImage()">‚Ä∫</button>
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
/* Project Detail Styles */
.project-detail {
  min-height: 100vh;
}

/* Hero Section */
.project-hero {
  position: relative;
  height: 80vh;
  min-height: 600px;
  overflow: hidden;
}

.hero-image {
  position: relative;
  width: 100%;
  height: 100%;
}

.hero-img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.hero-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    to bottom,
    rgba(0,0,0,0.3) 0%,
    rgba(0,0,0,0.1) 50%,
    rgba(0,0,0,0.8) 100%
  );
  display: flex;
  align-items: flex-end;
  padding: 60px;
}

.hero-content {
  max-width: 1400px;
  margin: 0 auto;
  width: 100%;
}

.breadcrumb {
  color: rgba(255,255,255,0.8);
  margin-bottom: 20px;
  font-size: 14px;
}

.breadcrumb a {
  color: rgba(255,255,255,0.8);
  text-decoration: none;
  transition: color 0.3s ease;
}

.breadcrumb a:hover {
  color: #9CAF88;
}

.breadcrumb span {
  margin: 0 10px;
}

.project-title {
  font-size: clamp(2.5rem, 5vw, 4.5rem);
  font-weight: 700;
  color: white;
  margin: 0 0 10px 0;
  text-shadow: 0 2px 10px rgba(0,0,0,0.5);
}

.project-category {
  font-size: 1.3rem;
  color: #9CAF88;
  margin: 0 0 20px 0;
  font-weight: 600;
}

.project-tags {
  display: flex;
  gap: 10px;
  flex-wrap: wrap;
}

.tag {
  background: rgba(156, 175, 136, 0.9);
  color: white;
  padding: 8px 16px;
  border-radius: 20px;
  font-size: 14px;
  font-weight: 600;
}

/* Project Content */
.project-content {
  padding: 80px 0;
  background: #f8f9f4;
}

.content-wrapper {
  max-width: 900px;
  margin: 0 auto;
  background: white;
  padding: 60px;
  border-radius: 20px;
  box-shadow: 0 10px 40px rgba(0,0,0,0.08);
  line-height: 1.8;
}

/* Typography Styles */
.content-wrapper h1 {
  color: #2F2F2F;
  font-size: 2.5rem;
  font-weight: 700;
  margin: 0 0 30px 0;
  line-height: 1.2;
  border-bottom: 3px solid #9CAF88;
  padding-bottom: 20px;
}

.content-wrapper h2 {
  color: #2F2F2F;
  font-size: 2rem;
  margin: 50px 0 25px 0;
  font-weight: 700;
  line-height: 1.3;
  position: relative;
}

.content-wrapper h2:before {
  content: '';
  position: absolute;
  left: -30px;
  top: 50%;
  transform: translateY(-50%);
  width: 4px;
  height: 30px;
  background: linear-gradient(135deg, #9CAF88, #D4A574);
  border-radius: 2px;
}

.content-wrapper h3 {
  color: #9CAF88;
  font-size: 1.5rem;
  margin: 40px 0 20px 0;
  font-weight: 600;
  line-height: 1.4;
}

.content-wrapper h4 {
  color: #555;
  font-size: 1.2rem;
  margin: 30px 0 15px 0;
  font-weight: 600;
}

.content-wrapper h5,
.content-wrapper h6 {
  color: #666;
  font-size: 1.1rem;
  margin: 25px 0 15px 0;
  font-weight: 600;
}

/* Paragraph Styles */
.content-wrapper p {
  color: #555;
  font-size: 1.1rem;
  line-height: 1.8;
  margin-bottom: 25px;
  text-align: justify;
}

.content-wrapper p:first-of-type {
  font-size: 1.2rem;
  color: #444;
  font-weight: 400;
}

/* List Styles */
.content-wrapper ul,
.content-wrapper ol {
  color: #555;
  font-size: 1.1rem;
  line-height: 1.8;
  margin-bottom: 25px;
  padding-left: 30px;
}

.content-wrapper li {
  margin-bottom: 12px;
  position: relative;
}

.content-wrapper ul li:before {
  content: '‚óè';
  color: #9CAF88;
  font-weight: bold;
  position: absolute;
  left: -20px;
}

.content-wrapper ol li {
  counter-increment: list-counter;
}

.content-wrapper ol li:before {
  content: counter(list-counter) '.';
  color: #9CAF88;
  font-weight: bold;
  position: absolute;
  left: -25px;
}

/* Blockquote Styles */
.content-wrapper blockquote {
  background: linear-gradient(135deg, #f8f9f4, #f0f2ec);
  border-left: 5px solid #9CAF88;
  padding: 30px 40px;
  margin: 40px 0;
  font-style: italic;
  font-size: 1.2rem;
  color: #444;
  border-radius: 0 15px 15px 0;
  box-shadow: 0 5px 20px rgba(156, 175, 136, 0.1);
}

.content-wrapper blockquote p {
  margin-bottom: 15px;
}

.content-wrapper blockquote p:last-child {
  margin-bottom: 0;
}

/* Code Styles */
.content-wrapper code {
  background: #f4f4f4;
  color: #e74c3c;
  padding: 3px 8px;
  border-radius: 4px;
  font-family: 'Courier New', monospace;
  font-size: 0.9em;
}

.content-wrapper pre {
  background: #2d3748;
  color: #e2e8f0;
  padding: 25px;
  border-radius: 10px;
  overflow-x: auto;
  margin: 30px 0;
  font-family: 'Courier New', monospace;
  line-height: 1.6;
}

.content-wrapper pre code {
  background: none;
  color: inherit;
  padding: 0;
}

/* Link Styles */
.content-wrapper a {
  color: #9CAF88;
  text-decoration: none;
  font-weight: 600;
  border-bottom: 2px solid transparent;
  transition: all 0.3s ease;
}

.content-wrapper a:hover {
  color: #D4A574;
  border-bottom-color: #D4A574;
}

/* Image Styles */
.content-wrapper img {
  max-width: 100%;
  height: auto;
  border-radius: 10px;
  margin: 30px 0;
  box-shadow: 0 10px 30px rgba(0,0,0,0.1);
}

/* Table Styles */
.content-wrapper table {
  width: 100%;
  border-collapse: collapse;
  margin: 30px 0;
  background: white;
  border-radius: 10px;
  overflow: hidden;
  box-shadow: 0 5px 20px rgba(0,0,0,0.1);
}

.content-wrapper th,
.content-wrapper td {
  padding: 15px;
  text-align: left;
  border-bottom: 1px solid #eee;
}

.content-wrapper th {
  background: #9CAF88;
  color: white;
  font-weight: 600;
}

.content-wrapper tr:last-child td {
  border-bottom: none;
}

.content-wrapper tr:nth-child(even) {
  background: #f8f9f4;
}

/* Horizontal Rule */
.content-wrapper hr {
  border: none;
  height: 2px;
  background: linear-gradient(135deg, #9CAF88, #D4A574);
  margin: 50px 0;
  border-radius: 2px;
}

/* Strong and Em */
.content-wrapper strong {
  color: #2F2F2F;
  font-weight: 700;
}

.content-wrapper em {
  color: #9CAF88;
  font-style: italic;
}

/* Additional Details */
.additional-details {
  padding: 60px 0;
  background: #FAF9F6;
}

.additional-details .details-card {
  background: white;
  padding: 40px;
  border-radius: 20px;
  box-shadow: 0 10px 40px rgba(0,0,0,0.1);
  max-width: 800px;
  margin: 0 auto;
}

/* Competitive Advantages */
.competitive-advantages {
  padding: 100px 0;
  background: linear-gradient(135deg, #f8f9f4 0%, #e8ebe0 100%);
  position: relative;
  overflow: hidden;
}

.competitive-advantages:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: url("data:image/svg+xml,%3Csvg width='40' height='40' viewBox='0 0 40 40' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%239CAF88' fill-opacity='0.02'%3E%3Cpolygon points='20,0 40,20 20,40 0,20'/%3E%3C/g%3E%3C/svg%3E");
  pointer-events: none;
}

.competitive-advantages .section-header {
  text-align: center;
  margin-bottom: 70px;
  position: relative;
  z-index: 1;
}

.competitive-advantages .section-header h2 {
  font-size: 2.8rem;
  color: #2F2F2F;
  margin: 0 0 15px 0;
  font-weight: 700;
}

.section-subtitle {
  font-size: 1.2rem;
  color: #666;
  margin: 0;
  font-style: italic;
}

.advantages-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 40px;
  position: relative;
  z-index: 1;
}

.advantage-card {
  background: white;
  padding: 40px 30px;
  border-radius: 20px;
  text-align: center;
  box-shadow: 0 10px 40px rgba(0,0,0,0.08);
  transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  border: 1px solid rgba(156, 175, 136, 0.1);
  position: relative;
  overflow: hidden;
}

.advantage-card:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
  background: linear-gradient(135deg, #9CAF88, #D4A574);
  transform: scaleX(0);
  transition: transform 0.4s ease;
}

.advantage-card:hover:before {
  transform: scaleX(1);
}

.advantage-card:hover {
  transform: translateY(-10px);
  box-shadow: 0 20px 60px rgba(0,0,0,0.15);
}

.advantage-icon {
  width: 80px;
  height: 80px;
  margin: 0 auto 25px;
  background: linear-gradient(135deg, #9CAF88, #D4A574);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
}

.advantage-card:hover .advantage-icon {
  transform: scale(1.1) rotate(5deg);
}

.advantage-icon svg {
  width: 40px;
  height: 40px;
  color: white;
}

.advantage-card h3 {
  font-size: 1.4rem;
  color: #2F2F2F;
  margin: 0 0 20px 0;
  font-weight: 600;
}

.advantage-card p {
  color: #666;
  line-height: 1.6;
  margin-bottom: 25px;
  font-size: 15px;
}

.advantage-highlight {
  margin-top: auto;
}

.highlight-badge {
  display: inline-block;
  background: linear-gradient(135deg, #9CAF88, #D4A574);
  color: white;
  padding: 8px 20px;
  border-radius: 25px;
  font-size: 12px;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 1px;
  box-shadow: 0 5px 15px rgba(156, 175, 136, 0.3);
}

/* Project Statistics */
.project-stats {
  padding: 100px 0;
  background: #2F2F2F;
  color: white;
  position: relative;
  overflow: hidden;
}

.project-stats:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(156, 175, 136, 0.1) 0%, rgba(212, 165, 116, 0.1) 100%);
  pointer-events: none;
}

.stats-header {
  text-align: center;
  margin-bottom: 70px;
  position: relative;
  z-index: 1;
}

.stats-header h2 {
  font-size: 2.8rem;
  margin: 0 0 15px 0;
  font-weight: 700;
  background: linear-gradient(135deg, #9CAF88, #D4A574);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.stats-header p {
  font-size: 1.2rem;
  color: rgba(255, 255, 255, 0.8);
  margin: 0;
}

.stats-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 40px;
  margin-bottom: 80px;
  position: relative;
  z-index: 1;
}

.stat-card {
  background: rgba(255, 255, 255, 0.05);
  padding: 40px 30px;
  border-radius: 20px;
  text-align: center;
  border: 1px solid rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.stat-card:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: linear-gradient(135deg, #9CAF88, #D4A574);
}

.stat-card:hover {
  transform: translateY(-5px);
  background: rgba(255, 255, 255, 0.08);
  border-color: rgba(156, 175, 136, 0.3);
}

.stat-icon {
  font-size: 2.5rem;
  margin-bottom: 20px;
  display: block;
}

.stat-content {
  display: flex;
  align-items: baseline;
  justify-content: center;
  gap: 5px;
  margin-bottom: 15px;
}

.stat-number {
  font-size: 3rem;
  font-weight: 700;
  color: #9CAF88;
  line-height: 1;
}

.stat-unit {
  font-size: 1.2rem;
  color: #D4A574;
  font-weight: 600;
}

.stat-label {
  font-size: 1.1rem;
  font-weight: 600;
  margin-bottom: 8px;
  color: white;
}

.stat-description {
  font-size: 14px;
  color: rgba(255, 255, 255, 0.7);
  font-style: italic;
}

/* Achievements Section */
.achievements-section {
  margin-bottom: 60px;
  position: relative;
  z-index: 1;
}

.achievements-section h3 {
  font-size: 2.2rem;
  text-align: center;
  margin-bottom: 50px;
  font-weight: 600;
  color: white;
}

.achievements-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 30px;
}

.achievement-item {
  display: flex;
  align-items: center;
  gap: 20px;
  padding: 25px;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 15px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  transition: all 0.3s ease;
}

.achievement-item:hover {
  background: rgba(255, 255, 255, 0.08);
  transform: translateX(10px);
}

.achievement-icon {
  font-size: 2rem;
  flex-shrink: 0;
  width: 60px;
  height: 60px;
  background: linear-gradient(135deg, #9CAF88, #D4A574);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.achievement-content h4 {
  font-size: 1.1rem;
  margin: 0 0 8px 0;
  font-weight: 600;
  color: white;
}

.achievement-content p {
  font-size: 14px;
  color: rgba(255, 255, 255, 0.7);
  margin: 0;
  line-height: 1.4;
}

/* Project Impact */
.project-impact {
  position: relative;
  z-index: 1;
}

.impact-card {
  background: linear-gradient(135deg, rgba(156, 175, 136, 0.1), rgba(212, 165, 116, 0.1));
  padding: 40px;
  border-radius: 20px;
  border: 1px solid rgba(156, 175, 136, 0.2);
  backdrop-filter: blur(10px);
}

.impact-card h3 {
  font-size: 1.8rem;
  text-align: center;
  margin-bottom: 30px;
  font-weight: 600;
  color: white;
}

.impact-metrics {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 30px;
}

.metric {
  text-align: center;
  padding: 20px;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 15px;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.metric-value {
  display: block;
  font-size: 2.5rem;
  font-weight: 700;
  color: #9CAF88;
  margin-bottom: 10px;
}

.metric-label {
  font-size: 14px;
  color: rgba(255, 255, 255, 0.8);
  line-height: 1.3;
}

/* Container */
.container {
  max-width: 1400px;
  margin: 0 auto;
  padding: 0 60px;
}

/* Project Overview */
.project-overview {
  padding: 100px 0;
  background: #FAF9F6;
}

.overview-grid {
  display: grid;
  grid-template-columns: 2fr 1fr;
  gap: 80px;
  align-items: start;
}

.overview-content h2 {
  font-size: 2.5rem;
  color: #2F2F2F;
  margin-bottom: 30px;
  font-weight: 700;
}

.project-description {
  font-size: 1.2rem;
  line-height: 1.8;
  color: #666;
  margin-bottom: 50px;
}

.challenge-solution {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 40px;
}

.challenge h3,
.solution h3 {
  font-size: 1.4rem;
  margin-bottom: 15px;
  font-weight: 600;
}

.challenge h3 {
  color: #D4A574;
}

.solution h3 {
  color: #9CAF88;
}

.challenge p,
.solution p {
  font-size: 1.1rem;
  line-height: 1.7;
  color: #555;
}

.details-card {
  background: white;
  padding: 40px;
  border-radius: 20px;
  box-shadow: 0 10px 40px rgba(0,0,0,0.1);
  position: sticky;
  top: 40px;
}

.details-card h3 {
  font-size: 1.4rem;
  color: #2F2F2F;
  margin-bottom: 30px;
  font-weight: 600;
}

.detail-grid {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.detail {
  display: flex;
  flex-direction: column;
  gap: 5px;
  padding: 15px 0;
  border-bottom: 1px solid #eee;
}

.detail:last-child {
  border-bottom: none;
}

.detail-label {
  font-size: 14px;
  color: #9CAF88;
  font-weight: 600;
}

.detail-value {
  color: #2F2F2F;
  font-weight: 500;
  font-size: 16px;
}

/* Project Gallery */
.project-gallery {
  padding: 100px 0;
  background: #F8F8F8;
}

.project-gallery h2 {
  font-size: 2.5rem;
  color: #2F2F2F;
  margin-bottom: 60px;
  text-align: center;
  font-weight: 700;
}

.gallery-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
  gap: 30px;
}

.gallery-item {
  position: relative;
  border-radius: 15px;
  overflow: hidden;
  cursor: pointer;
  transition: transform 0.3s ease;
  background: white;
  box-shadow: 0 10px 30px rgba(0,0,0,0.1);
}

.gallery-item:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 40px rgba(0,0,0,0.15);
}

.gallery-item img {
  width: 100%;
  height: 300px;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.gallery-item:hover img {
  transform: scale(1.05);
}

.gallery-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0,0,0,0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.gallery-item:hover .gallery-overlay {
  opacity: 1;
}

.view-icon {
  font-size: 2rem;
  color: white;
}

/* Features & Materials */
.features-materials {
  padding: 100px 0;
  background: #FAF9F6;
}

.features-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 80px;
}

.features h2,
.materials h2 {
  font-size: 2rem;
  color: #2F2F2F;
  margin-bottom: 30px;
  font-weight: 600;
}

.features-list,
.materials-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

.features-list li,
.materials-list li {
  padding: 15px 0;
  border-bottom: 1px solid #eee;
  color: #555;
  font-size: 1.1rem;
  line-height: 1.6;
  position: relative;
  padding-left: 30px;
}

.features-list li:before {
  content: '‚ú¶';
  position: absolute;
  left: 0;
  color: #9CAF88;
  font-weight: bold;
}

.materials-list li:before {
  content: '‚óÜ';
  position: absolute;
  left: 0;
  color: #D4A574;
  font-weight: bold;
}

/* Client Testimonial */
.client-testimonial {
  padding: 100px 0;
  background: linear-gradient(135deg, #f8f9f4 0%, #e8ebe0 100%);
  position: relative;
  overflow: hidden;
}

.client-testimonial:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%239CAF88' fill-opacity='0.03'%3E%3Ccircle cx='3' cy='3' r='3'/%3E%3C/g%3E%3C/svg%3E");
  pointer-events: none;
}

.testimonial-wrapper {
  max-width: 1000px;
  margin: 0 auto;
  position: relative;
  z-index: 1;
}

.testimonial-icon {
  text-align: center;
  margin-bottom: 40px;
}

.testimonial-icon svg {
  width: 60px;
  height: 60px;
  color: #9CAF88;
  opacity: 0.8;
}

.testimonial-card {
  background: white;
  border-radius: 25px;
  padding: 50px;
  box-shadow: 0 20px 60px rgba(0,0,0,0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(156, 175, 136, 0.1);
}

.testimonial-content {
  text-align: center;
  margin-bottom: 40px;
}

.testimonial-text {
  font-size: 1.5rem;
  color: #2F2F2F;
  font-style: italic;
  line-height: 1.6;
  margin: 0;
  position: relative;
}

.testimonial-text:before,
.testimonial-text:after {
  content: '"';
  font-size: 4rem;
  color: #9CAF88;
  position: absolute;
  font-family: Georgia, serif;
  opacity: 0.3;
}

.testimonial-text:before {
  top: -20px;
  left: -30px;
}

.testimonial-text:after {
  bottom: -40px;
  right: -30px;
}

.client-info {
  display: flex;
  align-items: center;
  gap: 25px;
  justify-content: center;
  padding-top: 30px;
  border-top: 1px solid rgba(156, 175, 136, 0.2);
}

.client-avatar {
  position: relative;
}

.avatar-circle {
  width: 70px;
  height: 70px;
  border-radius: 50%;
  background: linear-gradient(135deg, #9CAF88, #D4A574);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 24px;
  font-weight: 700;
  color: white;
  text-transform: uppercase;
  box-shadow: 0 8px 25px rgba(156, 175, 136, 0.3);
}

.client-details {
  text-align: left;
}

.client-name {
  font-size: 1.3rem;
  color: #2F2F2F;
  margin: 0 0 5px 0;
  font-weight: 700;
}

.client-role {
  font-size: 1rem;
  color: #666;
  margin: 0 0 10px 0;
}

.rating {
  display: flex;
  gap: 3px;
}

.star {
  color: #FFD700;
  font-size: 18px;
}

/* Related Projects Slider */
.related-projects {
  padding: 100px 0;
  background: #FAF9F6;
}

.section-header {
  text-align: center;
  margin-bottom: 60px;
}

.section-header h2 {
  font-size: 2.5rem;
  color: #2F2F2F;
  margin: 0 0 15px 0;
  font-weight: 700;
}

.section-subtitle {
  font-size: 1.1rem;
  color: #666;
  margin: 0;
}

.slider-container {
  position: relative;
  max-width: 1400px;
  margin: 0 auto;
}

.slider-wrapper {
  overflow: hidden;
  border-radius: 20px;
}

.projects-slider {
  display: flex;
  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  gap: 30px;
}

.slider-item {
  flex: 0 0 calc(33.333% - 20px);
  min-width: 0;
}

.project-card {
  display: block;
  background: white;
  border-radius: 20px;
  overflow: hidden;
  box-shadow: 0 10px 30px rgba(0,0,0,0.1);
  transition: all 0.3s ease;
  text-decoration: none;
  height: 100%;
}

.project-card:hover {
  transform: translateY(-10px);
  box-shadow: 0 20px 50px rgba(0,0,0,0.15);
}

.project-image {
  position: relative;
  height: 250px;
  overflow: hidden;
}

.project-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.project-card:hover .project-image img {
  transform: scale(1.05);
}

.project-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(156, 175, 136, 0.9), rgba(212, 165, 116, 0.9));
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.project-card:hover .project-overlay {
  opacity: 1;
}

.view-project {
  color: white;
  font-weight: 600;
  font-size: 16px;
  padding: 12px 24px;
  border: 2px solid white;
  border-radius: 30px;
  transition: all 0.3s ease;
}

.project-card:hover .view-project {
  background: white;
  color: #9CAF88;
}

.project-info {
  padding: 25px;
}

.project-name {
  font-size: 1.3rem;
  color: #2F2F2F;
  margin: 0 0 8px 0;
  font-weight: 600;
  line-height: 1.3;
}

.project-location {
  color: #9CAF88;
  margin: 0 0 15px 0;
  font-size: 14px;
  font-weight: 500;
}

.project-meta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 14px;
  color: #666;
}

.project-area,
.project-year {
  background: #f8f9f4;
  padding: 5px 12px;
  border-radius: 15px;
  font-weight: 500;
}

/* Slider Controls */
.slider-btn {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 50px;
  height: 50px;
  border: none;
  background: white;
  border-radius: 50%;
  color: #9CAF88;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 8px 25px rgba(0,0,0,0.1);
  z-index: 2;
}

.slider-btn:hover {
  background: #9CAF88;
  color: white;
  transform: translateY(-50%) scale(1.1);
}

.slider-btn svg {
  width: 24px;
  height: 24px;
}

.slider-prev {
  left: -25px;
}

.slider-next {
  right: -25px;
}

/* Slider Indicators */
.slider-indicators {
  display: flex;
  justify-content: center;
  gap: 10px;
  margin-top: 40px;
}

.indicator {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  border: none;
  background: rgba(156, 175, 136, 0.3);
  cursor: pointer;
  transition: all 0.3s ease;
}

.indicator.active,
.indicator:hover {
  background: #9CAF88;
  transform: scale(1.2);
}

/* No Related Projects */
.no-related {
  text-align: center;
  padding: 60px 0;
}

.no-related-content svg {
  width: 60px;
  height: 60px;
  color: #9CAF88;
  margin-bottom: 20px;
}

.no-related-content h3 {
  color: #2F2F2F;
  font-size: 1.5rem;
  margin: 0 0 10px 0;
}

.no-related-content p {
  color: #666;
  margin: 0 0 30px 0;
}

.view-all-btn {
  display: inline-flex;
  align-items: center;
  gap: 10px;
  padding: 15px 30px;
  background: linear-gradient(135deg, #9CAF88, #D4A574);
  color: white;
  text-decoration: none;
  border-radius: 30px;
  font-weight: 600;
  transition: all 0.3s ease;
}

.view-all-btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 30px rgba(156, 175, 136, 0.4);
}

/* Image Viewer Modal */
.image-viewer {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10000;
  display: none;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.image-viewer.active {
  display: flex;
  opacity: 1;
}

.viewer-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.95);
  cursor: pointer;
}

.viewer-content {
  position: relative;
  margin: auto;
  max-width: 90%;
  max-height: 90%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.viewer-close {
  position: absolute;
  top: -60px;
  right: 0;
  width: 50px;
  height: 50px;
  background: rgba(255,255,255,0.9);
  border: none;
  border-radius: 50%;
  color: #2F2F2F;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.viewer-close:hover {
  background: white;
  transform: rotate(90deg);
}

.viewer-close svg {
  width: 24px;
  height: 24px;
}

#viewer-image {
  max-width: 100%;
  max-height: 80vh;
  object-fit: contain;
  border-radius: 10px;
  box-shadow: 0 10px 50px rgba(0,0,0,0.5);
}

.viewer-controls {
  display: flex;
  align-items: center;
  gap: 20px;
  margin-top: 20px;
  color: white;
}

.viewer-prev,
.viewer-next {
  width: 50px;
  height: 50px;
  background: rgba(255,255,255,0.2);
  border: none;
  border-radius: 50%;
  color: white;
  font-size: 24px;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.viewer-prev:hover,
.viewer-next:hover {
  background: rgba(156, 175, 136, 0.8);
}

.viewer-counter {
  font-size: 16px;
  font-weight: 600;
}

/* Responsive Design */
@media (max-width: 1024px) {
  .container {
    padding: 0 40px;
  }
  
  .overview-grid,
  .challenge-solution,
  .features-grid {
    grid-template-columns: 1fr;
    gap: 40px;
  }
  
  .hero-overlay {
    padding: 40px;
  }
  
  .project-title {
    font-size: 2.5rem;
  }

  /* Testimonial Responsive */
  .testimonial-card {
    padding: 40px 30px;
  }

  .client-info {
    flex-direction: column;
    gap: 20px;
    text-align: center;
  }

  .client-details {
    text-align: center;
  }

  /* Slider Responsive */
  .slider-item {
    flex: 0 0 calc(50% - 15px);
  }

  .slider-btn {
    width: 45px;
    height: 45px;
  }

  .slider-prev {
    left: -22px;
  }

  .slider-next {
    right: -22px;
  }

  /* New sections responsive */
  .competitive-advantages,
  .project-stats {
    padding: 80px 0;
  }

  .advantages-grid {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 30px;
  }

  .advantage-card {
    padding: 35px 25px;
  }

  .competitive-advantages .section-header h2 {
    font-size: 2.2rem;
  }

  .stats-grid {
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: 30px;
  }

  .achievements-grid {
    grid-template-columns: 1fr;
    gap: 25px;
  }
}

@media (max-width: 768px) {
  .container {
    padding: 0 20px;
  }
  
  .project-overview,
  .project-gallery,
  .features-materials,
  .project-testimonial,
  .related-projects {
    padding: 60px 0;
  }
  
  .hero-overlay {
    padding: 20px;
  }
  
  .project-title {
    font-size: 2rem;
  }
  
  .gallery-grid {
    grid-template-columns: 1fr;
  }
  
  .testimonial-content blockquote {
    font-size: 1.3rem;
  }

  /* Testimonial Mobile */
  .testimonial-card {
    padding: 30px 20px;
  }

  .testimonial-text {
    font-size: 1.2rem;
  }

  .testimonial-text:before,
  .testimonial-text:after {
    font-size: 3rem;
  }

  .testimonial-text:before {
    top: -15px;
    left: -20px;
  }

  .testimonial-text:after {
    bottom: -30px;
    right: -20px;
  }

  .avatar-circle {
    width: 60px;
    height: 60px;
    font-size: 20px;
  }

  .client-name {
    font-size: 1.1rem;
  }

  /* Slider Mobile */
  .slider-item {
    flex: 0 0 100%;
  }

  .slider-btn {
    display: none;
  }

  .section-header h2 {
    font-size: 2rem;
  }

  /* New sections mobile */
  .competitive-advantages,
  .project-stats {
    padding: 60px 0;
  }

  .competitive-advantages .section-header h2,
  .stats-header h2 {
    font-size: 1.8rem;
  }

  .advantages-grid {
    grid-template-columns: 1fr;
    gap: 25px;
  }

  .advantage-card {
    padding: 30px 20px;
  }

  .advantage-icon {
    width: 60px;
    height: 60px;
  }

  .advantage-icon svg {
    width: 30px;
    height: 30px;
  }

  .stats-grid {
    grid-template-columns: 1fr;
    gap: 25px;
  }

  .stat-card {
    padding: 30px 20px;
  }

  .stat-number {
    font-size: 2.5rem;
  }

  .achievements-section h3 {
    font-size: 1.6rem;
  }

  .achievement-item {
    padding: 20px;
  }

  .achievement-icon {
    width: 50px;
    height: 50px;
    font-size: 1.5rem;
  }

  .impact-metrics {
    grid-template-columns: 1fr;
    gap: 20px;
  }

  .metric-value {
    font-size: 2rem;
  }

  /* Content Wrapper Responsive */
  .content-wrapper {
    padding: 40px 30px;
    margin: 0 20px;
  }

  .content-wrapper h1 {
    font-size: 2rem;
  }

  .content-wrapper h2 {
    font-size: 1.6rem;
    margin: 40px 0 20px 0;
  }

  .content-wrapper h2:before {
    left: -20px;
    height: 25px;
  }

  .content-wrapper h3 {
    font-size: 1.3rem;
    margin: 30px 0 15px 0;
  }

  .content-wrapper p,
  .content-wrapper ul,
  .content-wrapper ol {
    font-size: 1rem;
  }

  .content-wrapper blockquote {
    padding: 20px 25px;
    margin: 30px 0;
    font-size: 1.1rem;
  }

  .content-wrapper ul,
  .content-wrapper ol {
    padding-left: 25px;
  }

  .content-wrapper table {
    font-size: 14px;
  }

  .content-wrapper th,
  .content-wrapper td {
    padding: 10px 8px;
  }
}

@media (max-width: 480px) {
  .content-wrapper {
    padding: 30px 20px;
    margin: 0 10px;
    border-radius: 15px;
  }

  .content-wrapper h1 {
    font-size: 1.8rem;
  }

  .content-wrapper h2 {
    font-size: 1.4rem;
  }

  .content-wrapper h2:before {
    left: -15px;
    height: 20px;
    width: 3px;
  }

  .content-wrapper blockquote {
    padding: 15px 20px;
    font-size: 1rem;
  }

  .content-wrapper ul,
  .content-wrapper ol {
    padding-left: 20px;
  }

  .content-wrapper table {
    font-size: 12px;
  }

  .content-wrapper th,
  .content-wrapper td {
    padding: 8px 6px;
  }
}
</style>

<script is:inline>
// Image viewer functionality
let currentImageIndex = 0;
let images = [];

function openImageViewer(imageSrc, index) {
  const viewer = document.getElementById('image-viewer');
  const viewerImage = document.getElementById('viewer-image');
  const counter = document.querySelector('.viewer-counter');
  
  // Get all images from the current project
  images = Array.from(document.querySelectorAll('.gallery-item img')).map(img => img.src);
  currentImageIndex = index;
  
  viewerImage.src = imageSrc;
  counter.textContent = `${currentImageIndex + 1} de ${images.length}`;
  
  viewer.classList.add('active');
  document.body.style.overflow = 'hidden';
}

function closeImageViewer() {
  const viewer = document.getElementById('image-viewer');
  viewer.classList.remove('active');
  document.body.style.overflow = 'auto';
}

function prevImage() {
  currentImageIndex = currentImageIndex > 0 ? currentImageIndex - 1 : images.length - 1;
  updateViewerImage();
}

function nextImage() {
  currentImageIndex = currentImageIndex < images.length - 1 ? currentImageIndex + 1 : 0;
  updateViewerImage();
}

function updateViewerImage() {
  const viewerImage = document.getElementById('viewer-image');
  const counter = document.querySelector('.viewer-counter');
  
  viewerImage.src = images[currentImageIndex];
  counter.textContent = `${currentImageIndex + 1} de ${images.length}`;
}

// Related Projects Slider
let currentSlide = 0;
let slidesToShow = 3;

function updateSlidesToShow() {
  const width = window.innerWidth;
  if (width <= 768) {
    slidesToShow = 1;
  } else if (width <= 1024) {
    slidesToShow = 2;
  } else {
    slidesToShow = 3;
  }
}

function moveSlider(direction) {
  const slider = document.getElementById('relatedSlider');
  if (!slider) return;
  
  const totalSlides = slider.children.length;
  const maxSlide = Math.max(0, totalSlides - slidesToShow);
  
  if (direction === 'next') {
    currentSlide = currentSlide >= maxSlide ? 0 : currentSlide + 1;
  } else {
    currentSlide = currentSlide <= 0 ? maxSlide : currentSlide - 1;
  }
  
  updateSliderPosition();
  updateIndicators();
}

function goToSlide(index) {
  const slider = document.getElementById('relatedSlider');
  if (!slider) return;
  
  const totalSlides = slider.children.length;
  const maxSlide = Math.max(0, totalSlides - slidesToShow);
  
  currentSlide = Math.min(index, maxSlide);
  updateSliderPosition();
  updateIndicators();
}

function updateSliderPosition() {
  const slider = document.getElementById('relatedSlider');
  if (!slider) return;
  
  const slideWidth = 100 / slidesToShow;
  const translateX = -currentSlide * slideWidth;
  slider.style.transform = `translateX(${translateX}%)`;
}

function updateIndicators() {
  const indicators = document.querySelectorAll('.indicator');
  indicators.forEach((indicator, index) => {
    indicator.classList.toggle('active', index === currentSlide);
  });
}

// Auto-play slider
let autoPlayInterval;

function startAutoPlay() {
  autoPlayInterval = setInterval(() => {
    moveSlider('next');
  }, 5000);
}

function stopAutoPlay() {
  clearInterval(autoPlayInterval);
}

// Statistics counter animation
function animateCounter(element, target, duration = 2000) {
  const start = 0;
  const startTime = performance.now();
  
  function update(currentTime) {
    const elapsed = currentTime - startTime;
    const progress = Math.min(elapsed / duration, 1);
    
    // Easing function for smooth animation
    const easeOutExpo = progress === 1 ? 1 : 1 - Math.pow(2, -10 * progress);
    const current = Math.floor(start + (target - start) * easeOutExpo);
    
    element.textContent = current;
    
    if (progress < 1) {
      requestAnimationFrame(update);
    } else {
      element.textContent = target;
    }
  }
  
  requestAnimationFrame(update);
}

// Intersection Observer for stats animation
function initStatsAnimation() {
  const statNumbers = document.querySelectorAll('.stat-number');
  
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting && !entry.target.classList.contains('animated')) {
        const target = parseInt(entry.target.dataset.target) || parseInt(entry.target.textContent);
        entry.target.classList.add('animated');
        animateCounter(entry.target, target);
      }
    });
  }, {
    threshold: 0.5,
    rootMargin: '0px 0px -100px 0px'
  });

  statNumbers.forEach((stat) => {
    observer.observe(stat);
  });
}

// Advantage cards hover effects
function initAdvantageCards() {
  const cards = document.querySelectorAll('.advantage-card');
  
  cards.forEach((card) => {
    card.addEventListener('mouseenter', function() {
      // Add subtle animation to other cards
      cards.forEach((otherCard) => {
        if (otherCard !== card) {
          otherCard.style.opacity = '0.7';
          otherCard.style.transform = 'scale(0.98)';
        }
      });
    });
    
    card.addEventListener('mouseleave', function() {
      // Reset all cards
      cards.forEach((otherCard) => {
        otherCard.style.opacity = '1';
        otherCard.style.transform = 'scale(1)';
      });
    });
  });
}

// Initialize all components
document.addEventListener('DOMContentLoaded', function() {
  // Initialize slider
  updateSlidesToShow();
  updateSliderPosition();
  
  // Start auto-play
  const slider = document.getElementById('relatedSlider');
  if (slider && slider.children.length > slidesToShow) {
    startAutoPlay();
    
    // Pause on hover
    slider.addEventListener('mouseenter', stopAutoPlay);
    slider.addEventListener('mouseleave', startAutoPlay);
  }
  
  // Initialize statistics animation
  initStatsAnimation();
  
  // Initialize advantage cards effects
  initAdvantageCards();
});

// Handle resize
window.addEventListener('resize', function() {
  updateSlidesToShow();
  updateSliderPosition();
});

// Keyboard navigation
document.addEventListener('keydown', function(e) {
  const viewer = document.getElementById('image-viewer');
  if (viewer.classList.contains('active')) {
    switch(e.key) {
      case 'Escape':
        closeImageViewer();
        break;
      case 'ArrowLeft':
        prevImage();
        break;
      case 'ArrowRight':
        nextImage();
        break;
    }
  }
});
</script>